// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArtifactDeploymentInfoApi.Generated
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ArtifactDeploymentInfoAPI.
    /// </summary>
    public static partial class ArtifactDeploymentInfoAPIExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='organizationId'>
            /// The Organization Id
            /// </param>
            /// <param name='coordinationId'>
            /// The Coordination Id
            /// </param>
            public static IDictionary<string, IList<DeploymentInfoModel>> GetArtifactDeploymentInfo(this IArtifactDeploymentInfoAPI operations, System.Guid organizationId, System.Guid coordinationId)
            {
                return operations.GetArtifactDeploymentInfoAsync(organizationId, coordinationId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='organizationId'>
            /// The Organization Id
            /// </param>
            /// <param name='coordinationId'>
            /// The Coordination Id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IDictionary<string, IList<DeploymentInfoModel>>> GetArtifactDeploymentInfoAsync(this IArtifactDeploymentInfoAPI operations, System.Guid organizationId, System.Guid coordinationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetArtifactDeploymentInfoWithHttpMessagesAsync(organizationId, coordinationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='deploymentId'>
            /// The Deployment Id
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// The api-key created in the Admin app and used to authorize this action.
            /// </param>
            public static IDictionary<string, DeploymentInfoModel> GetPrivateArtifactDeploymentInfo(this IArtifactDeploymentInfoAPI operations, System.Guid deploymentId, string ocpApimSubscriptionKey)
            {
                return operations.GetPrivateArtifactDeploymentInfoAsync(deploymentId, ocpApimSubscriptionKey).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='deploymentId'>
            /// The Deployment Id
            /// </param>
            /// <param name='ocpApimSubscriptionKey'>
            /// The api-key created in the Admin app and used to authorize this action.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IDictionary<string, DeploymentInfoModel>> GetPrivateArtifactDeploymentInfoAsync(this IArtifactDeploymentInfoAPI operations, System.Guid deploymentId, string ocpApimSubscriptionKey, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetPrivateArtifactDeploymentInfoWithHttpMessagesAsync(deploymentId, ocpApimSubscriptionKey, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
